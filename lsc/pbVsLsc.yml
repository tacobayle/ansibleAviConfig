---
- hosts: localhost
  connection: local
  gather_facts: no

  collections:
    - vmware.alb

  tasks:

    - name: Create vsvip for dns VS - LSC
      vmware.alb.avi_vsvip:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "vsvip-{{ item.name }}"
        cloud_ref: "/api/cloud/?name={{ lsc.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        dns_info:
          - fqdn: "{{ item.name + '.' + lsc.domains | from_json | first | community.general.json_query('name') }}"
        vip:
          - auto_allocate_ip: true
            ipam_network_subnet:
              network_ref: "/api/network/?name={{ lsc.network_vip | from_json | community.general.json_query('name') }}"
              subnet:
                mask: "{{ lsc.network_vip | from_json | community.general.json_query('cidr') | split('/') | last }}"
                ip_addr:
                  type: "{{ lsc.network_vip | from_json | community.general.json_query('type') }}"
                  addr: "{{ lsc.network_vip | from_json | community.general.json_query('cidr') | split('/') | first }}"
      loop: "{{ lsc.virtual_services | from_json | community.general.json_query('dns') }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - lsc.virtual_services is defined
      tags:
        - lsc
        - vsvip_dns

    - name: Create vsvip for http VS - LSC
      vmware.alb.avi_vsvip:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "vsvip-{{ item.name }}"
        cloud_ref: "/api/cloud/?name={{ lsc.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        dns_info:
          - fqdn: "{{ item.name + '.' + lsc.domains | from_json | first | community.general.json_query('name') }}"
        vip:
          - auto_allocate_ip: true
            ipam_network_subnet:
              network_ref: "/api/network/?name={{ lsc.network_vip | from_json | community.general.json_query('name') }}"
              subnet:
                mask: "{{ lsc.network_vip | from_json | community.general.json_query('cidr') | split('/') | last }}"
                ip_addr:
                  type: "{{ lsc.network_vip | from_json | community.general.json_query('type') }}"
                  addr: "{{ lsc.network_vip | from_json | community.general.json_query('cidr') | split('/') | first }}"
      loop: "{{ lsc.virtual_services | from_json | community.general.json_query('http') }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - lsc.virtual_services is defined
      tags:
        - lsc
        - vsvip_http

    - name: Define list of servers
      set_fact:
        servers: "{{ servers | default([]) + [{ 'ip': { 'addr': item, 'type': 'V4'}}] }}"
      loop: "{{ avi_servers_lsc | from_json }}"

    - name: define pool with servers - LSC
      vmware.alb.avi_pool:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ lsc.pool | from_json | community.general.json_query('name') }}"
        cloud_ref: "/api/cloud/?name={{ lsc.name }}"
        tenant_ref: "/api/tenant?name={{ lsc.pool | from_json | community.general.json_query('tenant_ref') | default('admin') }}"
        lb_algorithm: "{{ lsc.pool | from_json | community.general.json_query('lb_algorithm') | default('LB_ALGORITHM_ROUND_ROBIN') }}"
        servers: "{{ servers }}"
      when:
        - avi_servers_lsc is defined
        - lsc.pool is defined
      tags:
        - pool
        - lsc

    - name: Create DNS Virtualservice (based on vsvip) - LSC
      vmware.alb.avi_virtualservice:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ item.name }}"
        application_profile_ref: "/api/applicationprofile/?name={{ item.application_profile_ref | default('System-DNS') }}"
        network_profile_ref: "/api/networkprofile/?name={{ item.network_profile_ref | default('System-UDP-Per-Pkt') }}"
        cloud_ref: "/api/cloud/?name={{ lsc.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        se_group_ref:  "/api/serviceenginegroup/?name={{ item.se_group_ref | default('Default-Group') }}"
        services: "{{ item.services }}"
        vsvip_ref: "/api/vsvip/?name=vsvip-{{ item.name }}"
      loop: "{{ lsc.virtual_services | from_json | community.general.json_query('dns') }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - lsc.virtual_services is defined
      tags:
        - vs
        - lsc

    - name: Create HTTP Virtualservice (based on vsvip) - LSC
      vmware.alb.avi_virtualservice:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ item.name }}"
        cloud_ref: "/api/cloud/?name={{ lsc.name }}"
        enabled: "{{ item.enabled | default('true') }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        application_profile_ref: "/api/applicationprofile/?name={{ item.application_profile_ref | default('System-Secure-HTTP') }}"
        ssl_profile_ref: "/api/sslprofile/?name={{ item.ssl_profile_ref | default('System-Standard') }}"
        ssl_key_and_certificate_refs: "/api/sslkeyandcertificate/?name={{ item.ssl_key_and_certificate_refs | default('System-Default-Cert') }}"
        services: "{{ item.services }}"
        pool_ref: "/api/pool?name={{ item.pool_ref | default(omit) }}"
        enable_rhi: "{{ item.enable_rhi | default('false') }}"
        vsvip_ref: "/api/vsvip/?name=vsvip-{{ item.name }}"
        se_group_ref:  "/api/serviceenginegroup/?name={{ item.se_group_ref | default('Default-Group') }}"
        analytics_policy:
          udf_log_throttle: 10
          metrics_realtime_update:
            duration: 0
            enabled: true
          significant_log_throttle: 0
          client_insights: NO_INSIGHTS
          full_client_logs:
            duration: 30
            throttle: 10
            enabled: true
          all_headers: true
      loop: "{{ lsc.virtual_services | from_json | community.general.json_query('http') }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - lsc.virtual_services is defined
      tags:
        - vs
        - lsc